{
  "address": "0x7f4FCcD77Bf5234C8FF6E871db30bB895D144934",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "AddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x04cf22983f895848320e960221c0759c8cf23fbc7acba3ec47ac3ba83fc27d7b",
  "receipt": {
    "to": null,
    "from": "0xF01d79D87207D9D32491a0EECb0725b83838d187",
    "contractAddress": "0x7f4FCcD77Bf5234C8FF6E871db30bB895D144934",
    "transactionIndex": 61,
    "gasUsed": "857891",
    "logsBloom": "0x
    "blockHash": "0xdefa51f0fc5c52bed5af08b9cc694fd3feac1823f92b57650492ef33819830e0",
    "transactionHash": "0x04cf22983f895848320e960221c0759c8cf23fbc7acba3ec47ac3ba83fc27d7b",
    "logs": [],
    "blockNumber": 4024015,
    "cumulativeGasUsed": "21380095",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "81b12f72174575bb34a5ca3a87f17504",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"AddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds\\n// withdraw funds\\n// set a minimum funding value in usd\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public AddressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getEthToUSD(priceFeed) >= MIN_USD, \\\"Not enough sent\\\");\\n        funders.push(msg.sender);\\n        AddressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            AddressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        // funds withdrawal\\n\\n        // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send Failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == i_owner, \\\"Sender is not owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x3b6feb66f62ea2bd2f6d835633f817af9c693e0bfd4e87d87978d659152b7021\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        (, int256 price,,,) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeedV = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return priceFeedV.version();\\n    }\\n\\n    function getEthToUSD(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUSD;\\n    }\\n\\n}\",\"keccak256\":\"0x0a8774d0afc64f157ef3c027a7820ef8a7c4091dfc5ccba5d98daecfd51621d8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561000f575f80fd5b50604051610f79380380610f7983398181016040528101906100319190610109565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610134565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100d8826100af565b9050919050565b6100e8816100ce565b81146100f2575f80fd5b50565b5f81519050610103816100df565b92915050565b5f6020828403121561011e5761011d6100ab565b5b5f61012b848285016100f5565b91505092915050565b608051610e1f61015a5f395f81816102e40152818161037201526105c80152610e1f5ff3fe608060405260043610610073575f3560e01c8063b60d42881161004d578063b60d4288146100f6578063dba6335f14610100578063dc0d3dff1461012a578063dc90eddd1461016657610082565b8063213dbea21461008c5780633ccfd60b146100b6578063741bef1a146100cc57610082565b36610082576100806101a2565b005b61008a6101a2565b005b348015610097575f80fd5b506100a06102d5565b6040516100ad91906107bb565b60405180910390f35b3480156100c1575f80fd5b506100ca6102e2565b005b3480156100d7575f80fd5b506100e06105a1565b6040516100ed919061084e565b60405180910390f35b6100fe6101a2565b005b34801561010b575f80fd5b506101146105c6565b6040516101219190610887565b60405180910390f35b348015610135575f80fd5b50610150600480360381019061014b91906108ce565b6105ea565b60405161015d9190610887565b60405180910390f35b348015610171575f80fd5b5061018c60048036038101906101879190610923565b610624565b60405161019991906107bb565b60405180910390f35b6802b5e3af16b18800006101e060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461063990919063ffffffff16565b1015610221576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610218906109a8565b60405180910390fd5b5f33908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102cc91906109f3565b92505081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610370576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036790610a70565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b5f80549050811015610497575f80828154811061041757610416610a8e565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050808061048f90610abb565b9150506103f7565b505f67ffffffffffffffff8111156104b2576104b1610b02565b5b6040519080825280602002602001820160405280156104e05781602001602082028036833780820191505090505b505f90805190602001906104f5929190610701565b505f3373ffffffffffffffffffffffffffffffffffffffff164760405161051b90610b5c565b5f6040518083038185875af1925050503d805f8114610555576040519150601f19603f3d011682016040523d82523d5f602084013e61055a565b606091505b505090508061059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059590610bba565b60405180910390fd5b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f81815481106105f8575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052805f5260405f205f915090505481565b5f8061064483610673565b90505f670de0b6b3a7640000858361065c9190610bd8565b6106669190610c46565b9050809250505092915050565b5f808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e29190610cfc565b5050509150506402540be400816106f99190610d73565b915050919050565b828054828255905f5260205f20908101928215610777579160200282015b82811115610776578251825f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061071f565b5b5090506107849190610788565b5090565b5b8082111561079f575f815f905550600101610789565b5090565b5f819050919050565b6107b5816107a3565b82525050565b5f6020820190506107ce5f8301846107ac565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61081661081161080c846107d4565b6107f3565b6107d4565b9050919050565b5f610827826107fc565b9050919050565b5f6108388261081d565b9050919050565b6108488161082e565b82525050565b5f6020820190506108615f83018461083f565b92915050565b5f610871826107d4565b9050919050565b61088181610867565b82525050565b5f60208201905061089a5f830184610878565b92915050565b5f80fd5b6108ad816107a3565b81146108b7575f80fd5b50565b5f813590506108c8816108a4565b92915050565b5f602082840312156108e3576108e26108a0565b5b5f6108f0848285016108ba565b91505092915050565b61090281610867565b811461090c575f80fd5b50565b5f8135905061091d816108f9565b92915050565b5f60208284031215610938576109376108a0565b5b5f6109458482850161090f565b91505092915050565b5f82825260208201905092915050565b7f4e6f7420656e6f7567682073656e7400000000000000000000000000000000005f82015250565b5f610992600f8361094e565b915061099d8261095e565b602082019050919050565b5f6020820190508181035f8301526109bf81610986565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109fd826107a3565b9150610a08836107a3565b9250828201905080821115610a2057610a1f6109c6565b5b92915050565b7f53656e646572206973206e6f74206f776e6572000000000000000000000000005f82015250565b5f610a5a60138361094e565b9150610a6582610a26565b602082019050919050565b5f6020820190508181035f830152610a8781610a4e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f610ac5826107a3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610af757610af66109c6565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f81905092915050565b50565b5f610b475f83610b2f565b9150610b5282610b39565b5f82019050919050565b5f610b6682610b3c565b9150819050919050565b7f43616c6c204661696c65640000000000000000000000000000000000000000005f82015250565b5f610ba4600b8361094e565b9150610baf82610b70565b602082019050919050565b5f6020820190508181035f830152610bd181610b98565b9050919050565b5f610be2826107a3565b9150610bed836107a3565b9250828202610bfb816107a3565b91508282048414831517610c1257610c116109c6565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c50826107a3565b9150610c5b836107a3565b925082610c6b57610c6a610c19565b5b828204905092915050565b5f69ffffffffffffffffffff82169050919050565b610c9481610c76565b8114610c9e575f80fd5b50565b5f81519050610caf81610c8b565b92915050565b5f819050919050565b610cc781610cb5565b8114610cd1575f80fd5b50565b5f81519050610ce281610cbe565b92915050565b5f81519050610cf6816108a4565b92915050565b5f805f805f60a08688031215610d1557610d146108a0565b5b5f610d2288828901610ca1565b9550506020610d3388828901610cd4565b9450506040610d4488828901610ce8565b9350506060610d5588828901610ce8565b9250506080610d6688828901610ca1565b9150509295509295909350565b5f610d7d82610cb5565b9150610d8883610cb5565b9250828202610d9681610cb5565b91507f800000000000000000000000000000000000000000000000000000000000000084145f84121615610dcd57610dcc6109c6565b5b8282058414831517610de257610de16109c6565b5b509291505056fea26469706673582212209e71c1cac52ae3ed3ef3210e27e511fed95e003b44e741b7b1e987e94b34c90f64736f6c63430008150033",
  "deployedBytecode": "0x608060405260043610610073575f3560e01c8063b60d42881161004d578063b60d4288146100f6578063dba6335f14610100578063dc0d3dff1461012a578063dc90eddd1461016657610082565b8063213dbea21461008c5780633ccfd60b146100b6578063741bef1a146100cc57610082565b36610082576100806101a2565b005b61008a6101a2565b005b348015610097575f80fd5b506100a06102d5565b6040516100ad91906107bb565b60405180910390f35b3480156100c1575f80fd5b506100ca6102e2565b005b3480156100d7575f80fd5b506100e06105a1565b6040516100ed919061084e565b60405180910390f35b6100fe6101a2565b005b34801561010b575f80fd5b506101146105c6565b6040516101219190610887565b60405180910390f35b348015610135575f80fd5b50610150600480360381019061014b91906108ce565b6105ea565b60405161015d9190610887565b60405180910390f35b348015610171575f80fd5b5061018c60048036038101906101879190610923565b610624565b60405161019991906107bb565b60405180910390f35b6802b5e3af16b18800006101e060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461063990919063ffffffff16565b1015610221576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610218906109a8565b60405180910390fd5b5f33908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102cc91906109f3565b92505081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610370576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036790610a70565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b5f80549050811015610497575f80828154811061041757610416610a8e565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050808061048f90610abb565b9150506103f7565b505f67ffffffffffffffff8111156104b2576104b1610b02565b5b6040519080825280602002602001820160405280156104e05781602001602082028036833780820191505090505b505f90805190602001906104f5929190610701565b505f3373ffffffffffffffffffffffffffffffffffffffff164760405161051b90610b5c565b5f6040518083038185875af1925050503d805f8114610555576040519150601f19603f3d011682016040523d82523d5f602084013e61055a565b606091505b505090508061059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059590610bba565b60405180910390fd5b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f81815481106105f8575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052805f5260405f205f915090505481565b5f8061064483610673565b90505f670de0b6b3a7640000858361065c9190610bd8565b6106669190610c46565b9050809250505092915050565b5f808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e29190610cfc565b5050509150506402540be400816106f99190610d73565b915050919050565b828054828255905f5260205f20908101928215610777579160200282015b82811115610776578251825f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061071f565b5b5090506107849190610788565b5090565b5b8082111561079f575f815f905550600101610789565b5090565b5f819050919050565b6107b5816107a3565b82525050565b5f6020820190506107ce5f8301846107ac565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61081661081161080c846107d4565b6107f3565b6107d4565b9050919050565b5f610827826107fc565b9050919050565b5f6108388261081d565b9050919050565b6108488161082e565b82525050565b5f6020820190506108615f83018461083f565b92915050565b5f610871826107d4565b9050919050565b61088181610867565b82525050565b5f60208201905061089a5f830184610878565b92915050565b5f80fd5b6108ad816107a3565b81146108b7575f80fd5b50565b5f813590506108c8816108a4565b92915050565b5f602082840312156108e3576108e26108a0565b5b5f6108f0848285016108ba565b91505092915050565b61090281610867565b811461090c575f80fd5b50565b5f8135905061091d816108f9565b92915050565b5f60208284031215610938576109376108a0565b5b5f6109458482850161090f565b91505092915050565b5f82825260208201905092915050565b7f4e6f7420656e6f7567682073656e7400000000000000000000000000000000005f82015250565b5f610992600f8361094e565b915061099d8261095e565b602082019050919050565b5f6020820190508181035f8301526109bf81610986565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109fd826107a3565b9150610a08836107a3565b9250828201905080821115610a2057610a1f6109c6565b5b92915050565b7f53656e646572206973206e6f74206f776e6572000000000000000000000000005f82015250565b5f610a5a60138361094e565b9150610a6582610a26565b602082019050919050565b5f6020820190508181035f830152610a8781610a4e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f610ac5826107a3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610af757610af66109c6565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f81905092915050565b50565b5f610b475f83610b2f565b9150610b5282610b39565b5f82019050919050565b5f610b6682610b3c565b9150819050919050565b7f43616c6c204661696c65640000000000000000000000000000000000000000005f82015250565b5f610ba4600b8361094e565b9150610baf82610b70565b602082019050919050565b5f6020820190508181035f830152610bd181610b98565b9050919050565b5f610be2826107a3565b9150610bed836107a3565b9250828202610bfb816107a3565b91508282048414831517610c1257610c116109c6565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c50826107a3565b9150610c5b836107a3565b925082610c6b57610c6a610c19565b5b828204905092915050565b5f69ffffffffffffffffffff82169050919050565b610c9481610c76565b8114610c9e575f80fd5b50565b5f81519050610caf81610c8b565b92915050565b5f819050919050565b610cc781610cb5565b8114610cd1575f80fd5b50565b5f81519050610ce281610cbe565b92915050565b5f81519050610cf6816108a4565b92915050565b5f805f805f60a08688031215610d1557610d146108a0565b5b5f610d2288828901610ca1565b9550506020610d3388828901610cd4565b9450506040610d4488828901610ce8565b9350506060610d5588828901610ce8565b9250506080610d6688828901610ca1565b9150509295509295909350565b5f610d7d82610cb5565b9150610d8883610cb5565b9250828202610d9681610cb5565b91507f800000000000000000000000000000000000000000000000000000000000000084145f84121615610dcd57610dcc6109c6565b5b8282058414831517610de257610de16109c6565b5b509291505056fea26469706673582212209e71c1cac52ae3ed3ef3210e27e511fed95e003b44e741b7b1e987e94b34c90f64736f6c63430008150033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "AddressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}